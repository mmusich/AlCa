#!/usr/bin/env python
import urllib
import string
import os
import sys
import commands
import time
from collections import defaultdict
import pprint

#    Lumi units are  10^30 cm^-2 sec^-1
# =====================================================================

# run    Initial Lumi    Ending Lumi    mid Lumi (i+e)/2 error Lumi abs(i-e)/2
# 278873    8904.87305    8635.50488    8770.18897    134.68408
# 278976    5683.01367    5661.81934    5672.41650    10.59717
# 278986    12197.94727   11508.37109   11853.15918   344.78809
# 279024    7800.84277    6825.05664    7312.94971    487.89307
# 279029    6787.63184    6421.09424    6604.36304    183.26880
# 279071    6214.92285    5775.08447    5995.00366    219.91919
# 279080    3858.40552    3660.84448    3759.62500    98.78052
# 279656    6726.52979    6442.96289    6584.74634    141.78345
# 279683    11137.37793   10880.95313   11009.16553   128.21240
# 279684    10894.16992   10570.70313   10732.43652   161.73340
# 279691    11236.42969   11800.46777   11518.44873   282.01904
# 279767    5444.02441    4620.02344    5032.02393    412.00049
# 279993    12746.13965   12163.12793   12454.63379   291.50586
# 279994    12139.51758   11711.99609   11925.75684   213.76074
# 280013    9654.74219    9844.11816    9749.43018    94.68799
# 280016    7933.84375    7510.48438    7722.16406    211.67969
# 280020    4409.20850    4363.40283    4386.30566    22.90283
# 280024    4339.11377    3986.91162    4163.01270    176.10107
# 280187    12339.46094   11837.88086   12088.67090   250.79004
# 280363    6509.24902    5982.17578    6245.71240    263.53662
# 281613    695.75665     554.95178     625.35422     70.40244
# 281639    7349.06397    6651.00928    7000.03662    349.02734
# 281726    8062.30518    7180.70898    7621.50708    440.79810
# 282033    12959.64258   12376.46973   12668.05615   291.58643
# 282034    12370.55762   12039.41309   12204.98535   165.57227
# 282035    12032.50488   11651.18652   11841.84570   190.65918
# 282710    13382.48926   13187.21387   13284.85156   97.63770
# 282732    12067.01465   11549.55176   11808.28320   258.73145
# 282842    13619.44336   12890.58106   13255.01221   364.43115
# 282917    12199.61523   11549.70703   11874.66113   324.95410
# 282918    11548.25684   11219.11133   11383.68408   164.57275
# 282922    9123.85254    8699.74023    8911.79639    212.05615
# 282923    8683.56543    7760.91797    8222.24170    461.32373
# 283042    10144.77344   10070.65723   10107.71533   37.05811
# 283049    14091.60254   13757.39648   13924.49951   167.10303
# 283407    15268.66211   14687.29785   14977.97998   290.68213
# 283416    5144.22852    4824.38477    4984.30664    159.92188
# 283548    8600.71973    8122.40918    8361.56445    239.15527
# 283680    10999.68457   10514.12207   10756.90332   242.78125
# 283681    10511.74316   10350.60156   10431.17236   80.57080
# 283834    5535.69092    5395.76318    5465.72705    69.96387
# 283876    9364.46777    9809.81348    9587.14063    222.67285
# 284014    7962.55322    8021.61816    7992.08569    29.53247
# 284038    7644.17773    7470.86035    7557.51904    86.65869
# 284039    7468.70947    7373.67188    7421.19067    47.51880
# 284040    7373.19043    7081.85840    7227.52441    145.66602
# 284041    7082.58838    6954.88916    7018.73877    63.84961
# 284042    6957.72900    6651.60889    6804.66895    153.06006
# 284043    6649.73291    6217.71680    6433.72485    216.00806
# =================================================================

RUNS=('278873','278976','278986','279024','279029','279071','279080','279656','279683','279684','279691','279767','279993','279994','280013','280016','280020','280024','280187','280363','281613','281639','281726','282033','282034','282035','282710','282732','282842','282917','282918','282922','282923','283042','283049','283407','283416','283548','283680','283681','283834','283876','284014','284038','284039','284040','284041','284042','284043')

DATASETS=('/HLTPhysics/Run2016A-SiStripCalMinBias-PromptReco-v1/ALCARECO','/HLTPhysics/Run2016A-SiStripCalMinBias-PromptReco-v2/ALCARECO','/HLTPhysics/Run2016B-SiStripCalMinBias-PromptReco-v1/ALCARECO','/HLTPhysics/Run2016B-SiStripCalMinBias-PromptReco-v2/ALCARECO','/HLTPhysics/Run2016C-SiStripCalMinBias-PromptReco-v2/ALCARECO','/HLTPhysics/Run2016D-SiStripCalMinBias-PromptReco-v2/ALCARECO','/HLTPhysics/Run2016E-SiStripCalMinBias-PromptReco-v2/ALCARECO','/HLTPhysics/Run2016F-SiStripCalMinBias-PromptReco-v1/ALCARECO','/HLTPhysics/Run2016G-SiStripCalMinBias-PromptReco-v1/ALCARECO','/HLTPhysics/Run2016H-SiStripCalMinBias-PromptReco-v1/ALCARECO','/HLTPhysics/Run2016H-SiStripCalMinBias-PromptReco-v2/ALCARECO','/HLTPhysics/Run2016H-SiStripCalMinBias-PromptReco-v3/ALCARECO')

the_RUN_DS_MAP = defaultdict(list)

out_file = open("blocks_to_subscribe.txt","w")

## find which run is in which dataset

for ds in DATASETS:
    results = commands.getstatusoutput("dasgoclient -query='run dataset="+ds+"'")[1] 
    the_RUN_DS_MAP[ds].append(results)

theBlocks_to_subscribe=[]

## loop on the runs

for run in RUNS:
    #print run
    for ds in DATASETS:
        if run in the_RUN_DS_MAP[ds][0]:
            blocks=commands.getstatusoutput("dasgoclient -query='block dataset="+ds+" run="+run+"'")[1].splitlines()
            #print "run",run,"is found in",ds,"in block",blocks
            for block in blocks:
                print run,block
                theBlocks_to_subscribe.append(block)

## make the list unique

used = []
for block in theBlocks_to_subscribe:
    if block not in used:
        print block+","
        used.append(block)
        out_file.write(block+",")
